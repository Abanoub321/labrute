{"version":3,"file":"static/js/616.67abf051.chunk.js","mappings":"4RAuCA,EA9Ba,SAAC,GAIA,IAHZA,EAGW,EAHXA,MACAC,EAEW,EAFXA,SACGC,GACQ,YACLC,GAAQC,EAAAA,EAAAA,KACd,OACE,UAACC,EAAA,GAAD,kBAASH,GAAT,eACE,SAACI,EAAA,EAAD,CAAcC,OAAQ,CACpBC,KAAM,CACJC,OAAQ,QAEVC,KAAM,CACJC,OAAQ,EACRF,OAAQ,QAEV,QAAS,CACPA,OAAQ,OACRG,WAAW,2BAAD,OAA6BT,EAAMU,QAAQD,WAAWE,MAAtD,gBAAmEX,EAAMU,QAAQD,WAAWG,QAA5F,gBAId,SAAC,KAAD,WACE,2BAAQf,MAETC,O,yBCEP,EA7BqB,SAAC,GAAwC,IAAtCA,EAAqC,EAArCA,SAAaC,GAAwB,YAC3D,OACE,SAACc,EAAA,GAAD,kBAAYd,GAAZ,cACE,SAACG,EAAA,EAAD,CAAKY,GAAI,CACPC,MAAO,EACPT,OAAQ,EACRU,aAAc,MACdC,UAAW,SAACjB,GAAD,mCAAiCA,EAAMU,QAAQQ,OAAOC,MAAtD,uCACQnB,EAAMU,QAAQD,WAAWW,aAC5CC,WAAY,mBACZC,OAAQ,EACRC,QAAS,OACTC,WAAY,UATd,UAYE,SAACtB,EAAA,EAAD,CAAKY,GAAI,CACPW,UAAW,8BACXJ,WAAY,mBACZK,GAAI,EACJC,GAAI,GAJN,SAOG7B,UCJX,EAtBsB,SACpB8B,EACAC,EACAC,GAEA,OAA0BC,EAAAA,EAAAA,UAASH,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,GAAe,EAQnB,OAPAN,EAAOC,GAAcM,MAAK,SAACC,GACrBF,GACFF,EAASI,MAEVC,OAAM,SAACC,GACRC,QAAQD,MAAMA,MAET,WAAQJ,GAAe,KAC7B,CAACN,EAAQC,IAEL,CAACE,EAAOC,I,UCqCjB,EA/CiB,WACf,IAAQQ,GAAMC,EAAAA,EAAAA,KAAND,EACR,EAAgBE,EAAc,GAAIC,EAAAA,EAAAA,KAAAA,MAA3BC,GAAP,eAEAL,QAAQM,IAAID,GAEZ,MAA0BE,EAAAA,SAAe,IAAzC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAcC,EAAAA,EAAAA,cAAY,SAACC,GAC/BH,EAASG,EAAMC,OAAOC,SACrB,IAEH,OACE,UAAC,EAAD,CAAMzD,MAAO4C,EAAE,WAAf,WACE,UAACvC,EAAA,EAAD,CAAKY,GAAI,CAAES,QAAS,OAAQgC,eAAgB,gBAAiBC,GAAI,GAAjE,WACE,SAACtD,EAAA,EAAD,CAAKY,GAAI,GAAT,mBACA,SAACZ,EAAA,EAAD,CAAKY,GAAI,CAAEC,MAAO,IAAKT,OAAQ,IAAKmD,SAAU,YAA9C,UACE,SAACvD,EAAA,EAAD,CACEY,GAAI,CACF2C,SAAU,WACVC,IAAK,EACLC,KAAM,GAERC,UAAU,MACVC,IAAI,sBACJC,IAAKrB,EAAE,sBAIb,UAACvC,EAAA,EAAD,CAAKY,GAAI,CAAES,QAAS,OAAQgC,eAAgB,MAAOQ,GAAI,OAAQC,GAAI,GAAnE,WACE,SAACC,EAAA,EAAD,CACEC,MAAOzB,EAAE,qBACT0B,SAAUjB,EACVI,MAAON,EACPoB,QAAQ,cAEV,SAAC,EAAD,CACEA,QAAQ,YACRtD,GAAI,CAAEuD,GAAI,GAFZ,SAIG5B,EAAE","sources":["components/Page.tsx","components/StyledButton.tsx","hooks/useStateAsync.tsx","views/HomeView.tsx"],"sourcesContent":["import { Box, BoxProps, GlobalStyles, useTheme } from '@mui/material';\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\ninterface Props extends BoxProps {\r\n  title: string,\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Page = ({\r\n  title,\r\n  children,\r\n  ...rest\r\n}: Props) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Box {...rest}>\r\n      <GlobalStyles styles={{\r\n        html: {\r\n          height: '100%'\r\n        },\r\n        body: {\r\n          margin: 0,\r\n          height: '100%',\r\n        },\r\n        '#root': {\r\n          height: '100%',\r\n          background: `linear-gradient(180deg, ${theme.palette.background.light} 0%, ${theme.palette.background.default} 160px)`,\r\n        }\r\n      }}\r\n      />\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import { Box, Button, ButtonProps } from '@mui/material';\r\nimport React from 'react';\r\n\r\n/**\r\n * StyledButton component\r\n * @returns {React.ReactElement}\r\n */\r\nconst StyledButton = ({ children, ...rest }: ButtonProps) => {\r\n  return (\r\n    <Button {...rest}>\r\n      <Box sx={{\r\n        width: 1,\r\n        height: 1,\r\n        borderRadius: '4px',\r\n        boxShadow: (theme) => `inset 0px -4px 0px ${theme.palette.border.inner},\r\n            0px -4px 0px ${theme.palette.background.paperLight}`,\r\n        transition: '.13s ease-in-out',\r\n        zIndex: 1,\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n      }}\r\n      >\r\n        <Box sx={{\r\n          transform: 'translate3d(0px, -2px, 0px)',\r\n          transition: '.13s ease-in-out',\r\n          px: 2,\r\n          py: 1,\r\n        }}\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default StyledButton;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n/* GETTER PARAMS MUST BE MEMOIZED */\r\nconst useStateAsync = <State, Params>(\r\n  initialState: State,\r\n  getter: (params?: Params) => Promise<State>,\r\n  getterParams?: Params\r\n): [State, React.Dispatch<React.SetStateAction<State>>] => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    getter(getterParams).then((data) => {\r\n      if (isSubscribed) {\r\n        setState(data);\r\n      }\r\n    }).catch((error) => {\r\n      console.error(error);\r\n    });\r\n    return () => { isSubscribed = false; };\r\n  }, [getter, getterParams]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useStateAsync;","import { Box, TextField } from '@mui/material';\r\nimport React, { useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Page from '../components/Page';\r\nimport StyledButton from '../components/StyledButton';\r\nimport useStateAsync from '../hooks/useStateAsync';\r\nimport Server from '../utils/Server';\r\n\r\n/**\r\n * HomeView component\r\n * @returns {React.ReactElement}\r\n */\r\nconst HomeView = () => {\r\n  const { t } = useTranslation();\r\n  const [users] = useStateAsync([], Server.User.list);\r\n\r\n  console.log(users);\r\n\r\n  const [login, setLogin] = React.useState('');\r\n\r\n  const changeLogin = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLogin(event.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <Page title={t('MyBrute')}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n        <Box sx={{}}>TODO</Box>\r\n        <Box sx={{ width: 640, height: 454, position: 'relative' }}>\r\n          <Box\r\n            sx={{\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n            }}\r\n            component=\"img\"\r\n            src=\"/images/main-bg.gif\"\r\n            alt={t('background')}\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Box sx={{ display: 'flex', justifyContent: 'end', mx: '14px', mt: 2 }}>\r\n        <TextField\r\n          label={t('alreadyRegistered')}\r\n          onChange={changeLogin}\r\n          value={login}\r\n          variant=\"outlined\"\r\n        />\r\n        <StyledButton\r\n          variant=\"contained\"\r\n          sx={{ ml: 2 }}\r\n        >\r\n          {t('enter!')}\r\n        </StyledButton>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n"],"names":["title","children","rest","theme","useTheme","Box","GlobalStyles","styles","html","height","body","margin","background","palette","light","default","Button","sx","width","borderRadius","boxShadow","border","inner","paperLight","transition","zIndex","display","alignItems","transform","px","py","initialState","getter","getterParams","useState","state","setState","useEffect","isSubscribed","then","data","catch","error","console","t","useTranslation","useStateAsync","Server","users","log","React","login","setLogin","changeLogin","useCallback","event","target","value","justifyContent","mb","position","top","left","component","src","alt","mx","mt","TextField","label","onChange","variant","ml"],"sourceRoot":""}