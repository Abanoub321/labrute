{"version":3,"file":"static/js/697.58b3da1e.chunk.js","mappings":"uOASe,SAASA,EAAaC,GACnC,IACEC,EAEED,EAFFC,OADF,EAGID,EADFE,aAAAA,OAFF,MAEiB,GAFjB,EAIMC,EAAiC,oBAAXF,EAAwB,SAAAG,GAAU,OAAIH,OARnDI,KADAC,EASkEF,IAR7C,OAARE,GAA4C,IAA5BC,OAAOC,KAAKF,GAAKG,OAQkCP,EAAeE,GAThH,IAAiBE,GAS6GL,EAC5H,OAAoBS,EAAAA,EAAAA,KAAKC,EAAAA,GAAQ,CAC/BV,OAAQE,I,cCYZ,MArBA,SAAsBH,GACpB,OAAoBU,EAAAA,EAAAA,KAAKE,GAAoBC,EAAAA,EAAAA,GAAS,GAAIb,EAAO,CAC/DE,aAAcA,EAAAA,M,UC6BlB,EA7Ba,SAAC,GAGA,IAFZY,EAEW,EAFXA,MACAC,EACW,EADXA,SAEMC,GAAQC,EAAAA,EAAAA,KACd,OACE,UAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,WACE,SAAC,EAAD,CAAclB,OAAQ,CACpBmB,KAAM,CACJC,OAAQ,QAEVC,KAAM,CACJC,OAAQ,EACRF,OAAQ,QAEV,QAAS,CACPA,OAAQ,OACRG,WAAW,2BAAD,OAA6BR,EAAMS,QAAQD,WAAWE,MAAtD,gBAAmEV,EAAMS,QAAQD,WAAWG,QAA5F,gBAId,SAAC,KAAD,WACE,2BAAQb,MAETC,MCRP,EAtBsB,SACpBa,EACAC,EACAC,GAEA,OAA0BC,EAAAA,EAAAA,UAASH,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,GAAe,EAQnB,OAPAN,EAAOC,GAAcM,MAAK,SAACC,GACrBF,GACFF,EAASI,MAEVC,OAAM,SAACC,GACRC,QAAQD,MAAMA,MAET,WAAQJ,GAAe,KAC7B,CAACN,EAAQC,IAEL,CAACE,EAAOC,I,UCCjB,EAbiB,WACf,IAAQQ,GAAMC,EAAAA,EAAAA,GAAe,QAArBD,EACR,EAAgBE,EAAc,GAAIC,EAAAA,EAAAA,KAAAA,MAA3BC,GAAP,eAIA,OAFAL,QAAQM,IAAID,IAGV,SAAC,EAAD,CAAM/B,MAAO2B,EAAE","sources":["../node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/GlobalStyles/GlobalStyles.js","components/Page.tsx","hooks/useStateAsync.tsx","views/HomeView.tsx"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\n\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from '../styles/defaultTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, _extends({}, props, {\n    defaultTheme: defaultTheme\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.shape({\n    __emotion_styles: PropTypes.any.isRequired\n  }), PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;","import { Box, GlobalStyles, useTheme } from '@mui/material';\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\ninterface Props {\r\n  title: string,\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Page = ({\r\n  title,\r\n  children\r\n}: Props) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Box sx={{ }}>\r\n      <GlobalStyles styles={{\r\n        html: {\r\n          height: '100%'\r\n        },\r\n        body: {\r\n          margin: 0,\r\n          height: '100%',\r\n        },\r\n        '#root': {\r\n          height: '100%',\r\n          background: `linear-gradient(180deg, ${theme.palette.background.light} 0%, ${theme.palette.background.default} 160px)`,\r\n        }\r\n      }}\r\n      />\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n/* GETTER PARAMS MUST BE MEMOIZED */\r\nconst useStateAsync = <State, Params>(\r\n  initialState: State,\r\n  getter: (params?: Params) => Promise<State>,\r\n  getterParams?: Params\r\n): [State, React.Dispatch<React.SetStateAction<State>>] => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    getter(getterParams).then((data) => {\r\n      if (isSubscribed) {\r\n        setState(data);\r\n      }\r\n    }).catch((error) => {\r\n      console.error(error);\r\n    });\r\n    return () => { isSubscribed = false; };\r\n  }, [getter, getterParams]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useStateAsync;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Page from '../components/Page';\r\nimport useStateAsync from '../hooks/useStateAsync';\r\nimport Server from '../utils/Server';\r\n\r\n/**\r\n * HomeView component\r\n * @returns {React.ReactElement}\r\n */\r\nconst HomeView = () => {\r\n  const { t } = useTranslation('home');\r\n  const [users] = useStateAsync([], Server.User.list);\r\n\r\n  console.log(users);\r\n\r\n  return (\r\n    <Page title={t('title')}>\r\n      {/* TODO */}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n"],"names":["GlobalStyles","props","styles","defaultTheme","globalStyles","themeInput","undefined","obj","Object","keys","length","_jsx","Global","SystemGlobalStyles","_extends","title","children","theme","useTheme","Box","sx","html","height","body","margin","background","palette","light","default","initialState","getter","getterParams","useState","state","setState","useEffect","isSubscribed","then","data","catch","error","console","t","useTranslation","useStateAsync","Server","users","log"],"sourceRoot":""}